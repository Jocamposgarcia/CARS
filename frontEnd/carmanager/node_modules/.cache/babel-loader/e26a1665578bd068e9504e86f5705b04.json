{"ast":null,"code":"var _jsxFileName = \"/Users/cp/Documents/gitProject/CARS/frontEnd/carmanager/src/App.js\";\nimport React, { Component } from 'react';\nimport { getCars } from './actions/car';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lol: 'emptylol'\n    };\n  }\n\n  componentDidMount() {\n    this.props.getCars();\n    console.log('did mount', this.props.cars);\n  } // axios.get('http://localhost:8000/api/cars/')\n  //   .then((response => {\n  //     console.log('response: ', response.data)\n  //   }))\n  // let response = await fetch('http://localhost:8000/api/cars/');\n  // let data = await response.json()\n  // console.log('data :', data)\n\n\n  componentDidUpdate(prevProps) {\n    if (this.props.cars !== undefined) {\n      console.log('didUpdate', this.props.cars);\n      this.setState({\n        lol: this.props.cars.map(el => el.make)\n      });\n    }\n  }\n\n  render() {\n    console.log('render');\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, \"working\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, this.state.lol));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  cars: state.cars\n});\n\nexport default connect(mapStateToProps, {\n  getCars\n})(App);","map":{"version":3,"sources":["/Users/cp/Documents/gitProject/CARS/frontEnd/carmanager/src/App.js"],"names":["React","Component","getCars","connect","axios","App","state","lol","componentDidMount","props","console","log","cars","componentDidUpdate","prevProps","undefined","setState","map","el","make","render","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAG1BK,KAH0B,GAGlB;AACNC,MAAAA,GAAG,EAAE;AADC,KAHkB;AAAA;;AAO1BC,EAAAA,iBAAiB,GAAG;AAGlB,SAAKC,KAAL,CAAWP,OAAX;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,KAAKF,KAAL,CAAWG,IAApC;AACD,GAZyB,CAe1B;AACA;AACA;AAEA;AAEA;AACA;AACA;;;AAQAC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAI,KAAKL,KAAL,CAAWG,IAAX,KAAoBG,SAAxB,EAAmC;AACjCL,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,KAAKF,KAAL,CAAWG,IAApC;AACA,WAAKI,QAAL,CAAc;AACZT,QAAAA,GAAG,EAAE,KAAKE,KAAL,CAAWG,IAAX,CAAgBK,GAAhB,CAAoBC,EAAE,IAAKA,EAAE,CAACC,IAA9B;AADO,OAAd;AAGD;AACF;;AAIDC,EAAAA,MAAM,GAAG;AAEPV,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKL,KAAL,CAAWC,GAAf,CAHF,CADF;AASD;;AAvDyB;;AA0D5B,MAAMc,eAAe,GAAIf,KAAD,KAAY;AAClCM,EAAAA,IAAI,EAAEN,KAAK,CAACM;AADsB,CAAZ,CAAxB;;AAIA,eAAeT,OAAO,CAACkB,eAAD,EACpB;AAAEnB,EAAAA;AAAF,CADoB,CAAP,CACAG,GADA,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { getCars } from './actions/car';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\n\nclass App extends Component {\n\n\n  state = {\n    lol: 'emptylol'\n  }\n\n  componentDidMount() {\n\n\n    this.props.getCars();\n    console.log('did mount', this.props.cars)\n  }\n\n\n  // axios.get('http://localhost:8000/api/cars/')\n  //   .then((response => {\n  //     console.log('response: ', response.data)\n\n  //   }))\n\n  // let response = await fetch('http://localhost:8000/api/cars/');\n  // let data = await response.json()\n  // console.log('data :', data)\n\n\n\n\n\n\n\n  componentDidUpdate(prevProps) {\n    if (this.props.cars !== undefined) {\n      console.log('didUpdate', this.props.cars)\n      this.setState({\n        lol: this.props.cars.map(el => (el.make))\n      })\n    }\n  }\n\n\n\n  render() {\n\n    console.log('render')\n\n    return (\n      <div>\n\n        <p>working</p>\n        <p>{this.state.lol}</p>\n\n\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  cars: state.cars\n});\n\nexport default connect(mapStateToProps,\n  { getCars })(App)\n"]},"metadata":{},"sourceType":"module"}