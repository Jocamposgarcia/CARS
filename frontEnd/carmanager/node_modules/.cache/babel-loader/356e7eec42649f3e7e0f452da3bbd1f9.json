{"ast":null,"code":"var _jsxFileName = \"/Users/cp/Documents/gitProject/CARS/frontEnd/carmanager/src/App.js\";\nimport React, { Component } from 'react';\nimport { getCars } from './actions/car';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.getCars();\n    console.log('did mount', this.props.cars);\n  } // axios.get('http://localhost:8000/api/cars/')\n  //   .then((response => {\n  //     console.log('response: ', response.data)\n  //   }))\n  // let response = await fetch('http://localhost:8000/api/cars/');\n  // let data = await response.json()\n  // console.log('data :', data)\n  // componentDidUpdate(prevProps) {\n  //   if (this.props.cars !== prevProps.cars) {\n  //     console.log('didUpdate', this.props.cars)\n  //     this.setState({\n  //       lol: this.props.cars[0].make\n  //     })\n  //   }\n  // }\n\n\n  render() {\n    console.log('this.props.cars', this.props.cars);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, \"working\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, this.props.cars.map(el => {\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 18\n        }\n      }, el.make);\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  cars: state.cars\n});\n\nexport default connect(mapStateToProps, {\n  getCars\n})(App);","map":{"version":3,"sources":["/Users/cp/Documents/gitProject/CARS/frontEnd/carmanager/src/App.js"],"names":["React","Component","getCars","connect","axios","App","componentDidMount","props","console","log","cars","render","map","el","make","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAM1BK,EAAAA,iBAAiB,GAAG;AAGlB,SAAKC,KAAL,CAAWL,OAAX;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,KAAKF,KAAL,CAAWG,IAApC;AACD,GAXyB,CAiC1B;AACA;AACA;AAEA;AAEA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIAC,EAAAA,MAAM,GAAG;AAEPH,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B,KAAKF,KAAL,CAAWG,IAA1C;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKH,KAAL,CAAWG,IAAX,CAAgBE,GAAhB,CAAoBC,EAAE,IAAI;AAC5B,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,EAAE,CAACC,IAAR,CAAP;AACD,KAFG,CAAJ,CAJF,CADF;AAWD;;AA3EyB;;AA8E5B,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCN,EAAAA,IAAI,EAAEM,KAAK,CAACN;AADsB,CAAZ,CAAxB;;AAIA,eAAeP,OAAO,CAACY,eAAD,EACpB;AAAEb,EAAAA;AAAF,CADoB,CAAP,CACAG,GADA,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { getCars } from './actions/car';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\n\nclass App extends Component {\n\n\n\n\n\n  componentDidMount() {\n\n\n    this.props.getCars();\n    console.log('did mount', this.props.cars)\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  // axios.get('http://localhost:8000/api/cars/')\n  //   .then((response => {\n  //     console.log('response: ', response.data)\n\n  //   }))\n\n  // let response = await fetch('http://localhost:8000/api/cars/');\n  // let data = await response.json()\n  // console.log('data :', data)\n\n\n\n\n\n\n\n  // componentDidUpdate(prevProps) {\n  //   if (this.props.cars !== prevProps.cars) {\n  //     console.log('didUpdate', this.props.cars)\n  //     this.setState({\n  //       lol: this.props.cars[0].make\n  //     })\n  //   }\n  // }\n\n\n\n  render() {\n\n    console.log('this.props.cars', this.props.cars)\n\n    return (\n      <div>\n\n        <p>working</p>\n\n        <p>{this.props.cars.map(el => {\n          return <h1>{el.make}</h1>\n        })}</p>\n\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  cars: state.cars\n});\n\nexport default connect(mapStateToProps,\n  { getCars })(App)\n"]},"metadata":{},"sourceType":"module"}