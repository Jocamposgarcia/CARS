{"ast":null,"code":"var _jsxFileName = \"/Users/cp/Documents/gitProject/CARS/frontEnd/carmanager/src/Home.js\";\nimport React, { Component } from 'react';\nimport { getCars, addCars, editCar, deleteCar } from './actions/car';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport store from './store';\nimport { AgGridReact, AgGridColumn } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\nimport 'ag-grid-enterprise';\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      columnDefs: [{// headerName: 'Make', field: 'make', editable: true, checkboxSelection: true, cellEditor: 'agSelectCellEditor',\n        // cellEditorParams: {\n        //     values: Object.keys()\n        // },\n        // valueFormatter: function (params) {\n        //     return lookupValue(carMappings, params.value);\n        // },\n        // valueParser: function (params) {\n        //     return lookupKey(carMappings, params.newValue);\n        // }\n      }, {\n        headerName: 'Model',\n        field: 'model',\n        editable: true\n      }, {\n        headerName: 'Year',\n        field: 'year',\n        editable: true\n      }, {\n        headerName: 'Mileage',\n        field: 'mileage',\n        editable: true\n      }],\n      rowData: null\n    };\n\n    this.changeColumns = () => {\n      this.setState({\n        columnDefs: [{\n          headerName: 'Make11',\n          field: 'make',\n          editable: true,\n          checkboxSelection: true\n        }, {\n          headerName: 'Model',\n          field: 'model',\n          editable: true\n        }, {\n          headerName: 'Year',\n          field: 'year',\n          editable: true\n        }, {\n          headerName: 'Mileage',\n          field: 'mileage',\n          editable: true\n        }]\n      });\n    };\n\n    this.onButtonClick = e => {\n      const selectedNodes = this.gridApi.getSelectedNodes();\n      console.log(selectedNodes);\n    };\n\n    this.editCars = () => {\n      const newCar = {\n        \"make\": \"Dodge4\",\n        \"model\": \"Caravan4\",\n        \"year\": 2000,\n        \"mileage\": 2000\n      };\n      this.props.editCar(81, newCar);\n    };\n\n    this.addCar = () => {\n      const newCar = {\n        \"make\": \"newCar\",\n        \"model\": \"BMW\",\n        \"year\": 2020,\n        \"mileage\": 2000\n      };\n      this.props.addCars(newCar);\n    };\n\n    this.onGridReady = params => {\n      this.api = params.api;\n      this.columnApi = params.columnApi;\n    };\n  }\n\n  async componentDidMount() {\n    await this.props.getCars();\n    this.setState({\n      rowData: this.props.cars\n    });\n    this.gridApi.setColumnDefs([{\n      headerName: 'Make',\n      field: 'make',\n      editable: true,\n      checkboxSelection: true // , cellEditor: 'agSelectCellEditor',\n      // cellEditorParams: {\n      //     values: Object.keys()\n      // },\n      // valueFormatter: function (params) {\n      //     return lookupValue(carMappings, params.value);\n      // },\n      // valueParser: function (params) {\n      //     return lookupKey(carMappings, params.newValue);\n      // }\n\n    }, {\n      headerName: 'Model',\n      field: 'model',\n      editable: true\n    }, {\n      headerName: 'Year',\n      field: 'year',\n      editable: true\n    }, {\n      headerName: 'Mileage',\n      field: 'mileage',\n      editable: true\n    }]);\n  }\n\n  render() {\n    console.log('render.. ', this.props.cars);\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addCar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, \"Add new car\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.editCars,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, \"Edit car with id 2\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.changeColumns,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, \"Edit column defs\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.onButtonClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, \"Get selected rows\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ag-theme-balham\",\n      style: {\n        height: '200px',\n        width: '800px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(AgGridReact, {\n      onGridReady: params => this.gridApi = params.api,\n      enableSorting: true,\n      columnDefs: this.state.columnDefs,\n      rowData: this.state.rowData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  cars: state.cars.cars\n});\n\nexport default connect(mapStateToProps, {\n  getCars,\n  addCars,\n  editCar,\n  deleteCar\n})(Home);\n\nfunction extractValues(mappings) {\n  return Object.keys(mappings);\n}\n\nfunction lookupValue(mappings, key) {\n  return mappings[key];\n}\n\nfunction lookupKey(mappings, name) {\n  for (var key in mappings) {\n    if (mappings.hasOwnProperty(key)) {\n      if (name === mappings[key]) {\n        return key;\n      }\n    }\n  }\n} // let result = Promise.resolve(store.dispatch(addCars(newCar)))\n//     .then(() => { console.log(this.props.cars) })\n// axios.get('http://localhost:8000/api/cars/')\n//   .then((response => {\n//     console.log('response: ', response.data)\n//   }))\n// let response = await fetch('http://localhost:8000/api/cars/');\n// let data = await response.json()\n// console.log('data :', data)\n// state = {\n//     cars: ['cars']\n// }\n// componentDidMount() {\n//     this.props.getCars()\n// }\n// editCars = () => {\n//     const newCar = {\n//         \"make\": \"111\",\n//         \"model\": \"Caravan\",\n//         \"year\": 2000,\n//         \"mileage\": 2000\n//     }\n//     this.props.editCar(80, newCar)\n// }\n// deleteCar = () => {\n//     this.props.deleteCar(2)\n// }\n// dispatchCars = () => {\n//     const newCar = {\n//         \"make\": \"Dodge\",\n//         \"model\": \"Caravan\",\n//         \"year\": 2003,\n//         \"mileage\": 250000\n//     }\n//     this.props.addCars(newCar)\n//     console.log(this.props.cars)\n// }\n// dispatchCars1 = () => {\n//     const newCar = {\n//         \"make\": \"Dodge\",\n//         \"model\": \"Caravan\",\n//         \"year\": 2003,\n//         \"mileage\": 250000\n//     }\n//     store.dispatch(addCars(newCar))\n// }\n// return (\n//     <div>\n//         <p>{this.state.cars}</p>\n//         <p>working</p>\n//         <button onClick={this.dispatchCars}>this.props.addCars(newCar)</button>\n//         <br />\n//         <button onClick={this.dispatchCars1}>store.dispatch(newCar)</button>\n//         <br />\n//         <button onClick={this.editCars}>Edit car with id 2</button>\n//         <br />\n//         <button onClick={this.deleteCar}>Delete car with id2</button>\n//         {\n//             this.props.cars.map(car => {\n//                 return <h1>{car.make}</h1>\n//             })\n//         }\n//     </div >\n// )","map":{"version":3,"sources":["/Users/cp/Documents/gitProject/CARS/frontEnd/carmanager/src/Home.js"],"names":["React","Component","getCars","addCars","editCar","deleteCar","connect","axios","store","AgGridReact","AgGridColumn","Home","state","columnDefs","headerName","field","editable","rowData","changeColumns","setState","checkboxSelection","onButtonClick","e","selectedNodes","gridApi","getSelectedNodes","console","log","editCars","newCar","props","addCar","onGridReady","params","api","columnApi","componentDidMount","cars","setColumnDefs","render","height","width","mapStateToProps","extractValues","mappings","Object","keys","lookupValue","key","lookupKey","name","hasOwnProperty"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { getCars, addCars, editCar, deleteCar } from './actions/car';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport store from './store'\n\nimport { AgGridReact, AgGridColumn } from 'ag-grid-react';\n\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\nimport 'ag-grid-enterprise';\n\nclass Home extends Component {\n\n    state = {\n        columnDefs: [\n            {\n                // headerName: 'Make', field: 'make', editable: true, checkboxSelection: true, cellEditor: 'agSelectCellEditor',\n                // cellEditorParams: {\n                //     values: Object.keys()\n                // },\n                // valueFormatter: function (params) {\n                //     return lookupValue(carMappings, params.value);\n                // },\n                // valueParser: function (params) {\n                //     return lookupKey(carMappings, params.newValue);\n                // }\n            },\n            { headerName: 'Model', field: 'model', editable: true },\n            { headerName: 'Year', field: 'year', editable: true },\n            { headerName: 'Mileage', field: 'mileage', editable: true }\n        ],\n        rowData: null\n    }\n\n    async componentDidMount() {\n        await this.props.getCars();\n        this.setState({ rowData: this.props.cars })\n        this.gridApi.setColumnDefs(\n            [\n                {\n                    headerName: 'Make', field: 'make', editable: true, checkboxSelection: true\n                    // , cellEditor: 'agSelectCellEditor',\n                    // cellEditorParams: {\n                    //     values: Object.keys()\n                    // },\n                    // valueFormatter: function (params) {\n                    //     return lookupValue(carMappings, params.value);\n                    // },\n                    // valueParser: function (params) {\n                    //     return lookupKey(carMappings, params.newValue);\n                    // }\n                },\n                { headerName: 'Model', field: 'model', editable: true },\n                { headerName: 'Year', field: 'year', editable: true },\n                { headerName: 'Mileage', field: 'mileage', editable: true }\n            ]\n        )\n\n    }\n\n    changeColumns = () => {\n        this.setState({\n            columnDefs: [\n                { headerName: 'Make11', field: 'make', editable: true, checkboxSelection: true },\n                { headerName: 'Model', field: 'model', editable: true },\n                { headerName: 'Year', field: 'year', editable: true },\n                { headerName: 'Mileage', field: 'mileage', editable: true }\n            ]\n        })\n\n    }\n\n    onButtonClick = e => {\n        const selectedNodes = this.gridApi.getSelectedNodes()\n        console.log(selectedNodes)\n    }\n\n    editCars = () => {\n        const newCar = {\n            \"make\": \"Dodge4\",\n            \"model\": \"Caravan4\",\n            \"year\": 2000,\n            \"mileage\": 2000\n        }\n\n        this.props.editCar(81, newCar)\n    }\n\n    addCar = () => {\n        const newCar = {\n            \"make\": \"newCar\",\n            \"model\": \"BMW\",\n            \"year\": 2020,\n            \"mileage\": 2000\n        }\n        this.props.addCars(newCar)\n    }\n\n    onGridReady = (params) => {\n        this.api = params.api;\n        this.columnApi = params.columnApi;\n    }\n\n\n\n\n\n\n    render() {\n        console.log('render.. ', this.props.cars)\n\n        return (\n            <React.Fragment>\n                <button onClick={this.addCar}>Add new car</button>\n                <button onClick={this.editCars}>Edit car with id 2</button>\n                <button onClick={this.changeColumns}>Edit column defs</button>\n                <button onClick={this.onButtonClick}>Get selected rows</button>\n                <div className=\"ag-theme-balham\" style={{ height: '200px', width: '800px' }}>\n\n                    <AgGridReact\n                        onGridReady={params => this.gridApi = params.api}\n                        enableSorting={true}\n                        columnDefs={this.state.columnDefs}\n                        rowData={this.state.rowData}>\n                        {/* <AgGridColumn headerName='Make' field='make' editable={true} checkboxSelection={true}></AgGridColumn>\n                        <AgGridColumn headerName='Model' field='model' editable={true} ></AgGridColumn>\n                        <AgGridColumn headerName='Year' field='year' editable={true} ></AgGridColumn>\n                        <AgGridColumn headerName='Mileage' field='mileage' editable={true} ></AgGridColumn> */}\n\n\n\n\n\n                    </AgGridReact>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\n\n\nconst mapStateToProps = (state) => ({\n    cars: state.cars.cars\n});\n\nexport default connect(mapStateToProps,\n    { getCars, addCars, editCar, deleteCar })(Home)\n\n\n\nfunction extractValues(mappings) {\n    return Object.keys(mappings);\n}\nfunction lookupValue(mappings, key) {\n    return mappings[key];\n}\nfunction lookupKey(mappings, name) {\n    for (var key in mappings) {\n        if (mappings.hasOwnProperty(key)) {\n            if (name === mappings[key]) {\n                return key;\n            }\n        }\n    }\n}\n\n\n        // let result = Promise.resolve(store.dispatch(addCars(newCar)))\n        //     .then(() => { console.log(this.props.cars) })\n\n\n    // axios.get('http://localhost:8000/api/cars/')\n    //   .then((response => {\n    //     console.log('response: ', response.data)\n\n    //   }))\n\n    // let response = await fetch('http://localhost:8000/api/cars/');\n    // let data = await response.json()\n    // console.log('data :', data)\n\n\n    // state = {\n    //     cars: ['cars']\n    // }\n\n    // componentDidMount() {\n    //     this.props.getCars()\n    // }\n\n    // editCars = () => {\n    //     const newCar = {\n    //         \"make\": \"111\",\n    //         \"model\": \"Caravan\",\n    //         \"year\": 2000,\n    //         \"mileage\": 2000\n    //     }\n\n    //     this.props.editCar(80, newCar)\n\n\n    // }\n\n    // deleteCar = () => {\n    //     this.props.deleteCar(2)\n\n    // }\n\n    // dispatchCars = () => {\n\n    //     const newCar = {\n    //         \"make\": \"Dodge\",\n    //         \"model\": \"Caravan\",\n    //         \"year\": 2003,\n    //         \"mileage\": 250000\n\n\n    //     }\n\n    //     this.props.addCars(newCar)\n    //     console.log(this.props.cars)\n\n    // }\n\n\n    // dispatchCars1 = () => {\n\n    //     const newCar = {\n    //         \"make\": \"Dodge\",\n    //         \"model\": \"Caravan\",\n    //         \"year\": 2003,\n    //         \"mileage\": 250000\n\n    //     }\n\n\n\n    //     store.dispatch(addCars(newCar))\n\n\n\n    // }\n\n\n\n    // return (\n    //     <div>\n    //         <p>{this.state.cars}</p>\n    //         <p>working</p>\n    //         <button onClick={this.dispatchCars}>this.props.addCars(newCar)</button>\n    //         <br />\n    //         <button onClick={this.dispatchCars1}>store.dispatch(newCar)</button>\n    //         <br />\n    //         <button onClick={this.editCars}>Edit car with id 2</button>\n    //         <br />\n    //         <button onClick={this.deleteCar}>Delete car with id2</button>\n\n\n    //         {\n    //             this.props.cars.map(car => {\n    //                 return <h1>{car.make}</h1>\n    //             })\n    //         }\n\n    //     </div >\n    // )\n"]},"metadata":{},"sourceType":"module"}