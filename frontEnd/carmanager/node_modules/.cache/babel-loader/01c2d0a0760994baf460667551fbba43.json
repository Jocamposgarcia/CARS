{"ast":null,"code":"import { GET_CARS, GET_CAR_ID, ADD_CAR, EDIT_CAR, DELETE_CAR } from '../actions/types';\nconst initialState = {\n  cars: []\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_CARS:\n      return { ...state,\n        cars: action.payload\n      };\n    // if this is commented out then the prop state will not be updated after\n    // a car has been added\n\n    case ADD_CAR:\n      return { ...state,\n        cars: [...state.cars, action.payload]\n      };\n\n    case EDIT_CAR:\n      console.log('EDIT_CAR REDUCER.');\n      return { ...state,\n        cars: state.cars.map(car => car.id === action.payload.id ? action.payload : car)\n      };\n\n    case DELETE_CAR:\n      return { ...state,\n        cars: state.cars.filter(car => car.id !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/cp/Documents/gitProject/CARS/frontEnd/carmanager/src/reducers/car.js"],"names":["GET_CARS","GET_CAR_ID","ADD_CAR","EDIT_CAR","DELETE_CAR","initialState","cars","state","action","type","payload","console","log","map","car","id","filter"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,UAAnB,EAA+BC,OAA/B,EAAwCC,QAAxC,EAAkDC,UAAlD,QAAoE,kBAApE;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AADW,CAArB;AAIA,eAAe,UAAUC,KAAK,GAAGF,YAAlB,EAAgCG,MAAhC,EAAwC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,QAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHD,QAAAA,IAAI,EAAEE,MAAM,CAACE;AAFV,OAAP;AAKJ;AACA;;AACA,SAAKR,OAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHD,QAAAA,IAAI,EAAE,CAAC,GAAGC,KAAK,CAACD,IAAV,EAAgBE,MAAM,CAACE,OAAvB;AAFH,OAAP;;AAKJ,SAAKP,QAAL;AACIQ,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,aAAO,EACH,GAAGL,KADA;AAEHD,QAAAA,IAAI,EAAEC,KAAK,CAACD,IAAN,CAAWO,GAAX,CAAeC,GAAG,IACpBA,GAAG,CAACC,EAAJ,KAAWP,MAAM,CAACE,OAAP,CAAeK,EAA1B,GAA+BP,MAAM,CAACE,OAAtC,GAAgDI,GAD9C;AAFH,OAAP;;AASJ,SAAKV,UAAL;AACI,aAAO,EACH,GAAGG,KADA;AAEHD,QAAAA,IAAI,EAAEC,KAAK,CAACD,IAAN,CAAWU,MAAX,CAAkBF,GAAG,IAAIA,GAAG,CAACC,EAAJ,KAAWP,MAAM,CAACE,OAA3C;AAFH,OAAP;;AAMJ;AACI,aAAOH,KAAP;AAlCR;AAuCH","sourcesContent":["import { GET_CARS, GET_CAR_ID, ADD_CAR, EDIT_CAR, DELETE_CAR } from '../actions/types'\n\n\nconst initialState = {\n    cars: [],\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_CARS:\n            return {\n                ...state,\n                cars: action.payload\n            }\n\n        // if this is commented out then the prop state will not be updated after\n        // a car has been added\n        case ADD_CAR:\n            return {\n                ...state,\n                cars: [...state.cars, action.payload]\n            }\n\n        case EDIT_CAR:\n            console.log('EDIT_CAR REDUCER.')\n            return {\n                ...state,\n                cars: state.cars.map(car =>\n                    car.id === action.payload.id ? action.payload : car)\n\n\n\n            }\n\n        case DELETE_CAR:\n            return {\n                ...state,\n                cars: state.cars.filter(car => car.id !== action.payload)\n            }\n\n\n        default:\n            return state;\n    }\n\n\n\n}"]},"metadata":{},"sourceType":"module"}